---
version: 1

kind: experiment

framework: pytorch

declarations:
  env: "Pendulum-v0"
  agent: 'PPOAgent'
  agent_module: 'agents.PPOAgent.PPOAgent'
  random_seed: 10000
  max_episodes: 10000000
  max_episode_len: 300
  random_episode_num: 0
  render_env: false
  use_monitor: false
  log_dir: 'polyaxon'
# Agent args
#  parser.add_argument('--lr', help='actor network learning rate', default=0.0001, type=float)
#  parser.add_argument('--gamma', help='discount factor for critic updates', default=0.99, type=float)
#  parser.add_argument('--k-size', help='size of update memory', default=300, type=int)
#  parser.add_argument('--action-std', help='standard deviation of action output signal', default=0.6, type=float)
#  parser.add_argument('--epochs', help='epochs to update per step', default=5, type=int)
#  parser.add_argument('--epsilon')
#  parser.add_argument('--model-dir', help='directory for storing gym results', default='./saved_models')
#  parser.add_argument('--cuda', help='Enable gpu optimization', action='store_true')
  lr: 0.0001
  gamma: 0.99
  batch_size: 128
  action_std: 0.3
  epochs: 25
  latent: 10
  epsilon: 0.2
  model_dir: 'polyaxon'
  cuda: 'True'
  lam: 0.95
  sampler: 'AdaptiveGaussianSampler'


build:
  backend: kaniko
  image: pytorch/pytorch:nightly-runtime-cuda9.2-cudnn7
  build_steps:
    - pip install PyYAML --ignore-installed
    - pip install polyaxon_helper
    - pip install polyaxon_client
    - pip install cloudpickle
    - pip install gym
    - pip install pybullet
    - pip install tensorboardX
    - apt-get update -y
    - apt-get install ffmpeg -y
    - apt install -y python3-dev zlib1g-dev libjpeg-dev cmake swig python-pyglet python3-opengl libboost-all-dev libsdl2-dev libosmesa6-dev patchelf ffmpeg xvfb
    - pip install gym[box2d]
environment:
  resources:
    gpu:
      requests: 1
      limits: 1
#  node_selector:
#    kubernetes.io/hostname: dn08


run:
  cmd: python -u train.py \
    "--use-monitor" \
    --env="Pendulum-v0" \
    --agent=PPOAgent \
    --agent-module=agents.PPOAgent.PPOAgent \
    --random-seed=1024 \
    --max-episodes=50000 \
    --max-episode-len=3000 \
    --random-episodes=0 \
    --log-dir="./results1" \
    --actor-lr=0.001 \
    --critic-lr=0.01 \
    --gamma=0.9 \
    --lam=0.9 \
    --buffer-size=5000000 \
    --batch-size=3 \
    --model-dir="./results1/model" \
    --monitor-dir="./results1/monitor" \
    --sampler=GaussianSampler \
    --std=0.2 \
    --epochs=15 \
    --checkpoint-steps=100
